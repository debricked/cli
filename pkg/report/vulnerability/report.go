package vulnerability

import (
	"errors"
	"fmt"
	"net/http"

	"github.com/debricked/cli/pkg/client"
	"github.com/debricked/cli/pkg/report"
)

var (
	ArgsError         = errors.New("failed to handle args")
	SubscriptionError = errors.New("premium feature. Please visit https://debricked.com/pricing/ for more info")
)

type OrderArgs struct {
	Email string
}

type Reporter struct {
	DebClient client.IDebClient
}

func (r Reporter) Order(args report.IOrderArgs) error {
	orderArgs, ok := args.(OrderArgs)
	if !ok {
		return ArgsError
	}

	uri := fmt.Sprintf("/api/1.0/open/repositories/get-repositories?order=asc&generateExcel=1&email=%s", orderArgs.Email)
	res, err := r.DebClient.Get(uri, "application/json")
	if err != nil {
		return err
	}
	defer res.Body.Close()
	if res.StatusCode == http.StatusForbidden {
		return SubscriptionError
	}

	if res.StatusCode != http.StatusOK {
		return fmt.Errorf("failed to order report. Status code: %d", res.StatusCode)
	}

	return nil

}
